ssh -i your-key.pem -N -L 22:rds_endpoint:rds_port ec2-user@frontend_server_ip  // setup ssh tunneling between rds and server
	
#useradd <name> or adduser <name>
sudo userdel -r username

#useradd -d /home/anand -m anand
# su - <name>
$ssh-keygen
press three time enter
$ls -al				(There will be .ssh directory go to .ssh directory)
$cd .ssh
$ls -al
$cat id_rsa				(that is your pem file) save with username.pem(all files)   
$mv id_rsa.pub authorized_keys 		(rename id_rsa.put to authorized_keys)
$chmod 600 authorized_keys
$exit
#vi /etc/sudoers

<name> ALL=(ALL:ALL) NOPASSWD:ALL

// Go to puttygen load key > conversation > edport Openssh key then save with username.pem
https://serverfault.com/questions/854208/ssh-suddenly-returning-invalid-format --- can check with link 

try to connect with pem and enter with sshuser in windows
Go to location and CMD then
ssh -i "Edinno_Website(6th June).pem" ubuntu@3.109.91.171
ssh -i edinnonew.pem edinnonew@3.109.91.171

ssh -i anandedique.pem anandedique@15.206.252.61

///https://learnubuntu.com/change-file-ownership/#google_vignette  //link for permisiions

//Install OpenSSH in Windows//
Setting>Apps>Optional features>add on optional features>search(OpenSSH)>Next>Install

sudo chown NewOwner File //To shift ownership of a file to a new user, you just have to append the filename with the new user
sudo chown milan Music.mp3 //For example, I'll be changing ownership of Music.mp3 to the user named Milan.
sudo chown NewOwner File1 File2 File3 //To change ownership of multiple files, you just have to chain the filenames with a new owner.
sudo chown NewOwner Dir1 File1 Dir2 File2 //Similarly, you can combine the directory names with filenames and change their owner at once
sudo chown :NewGroup File //As you can clearly see, the group users have their own privileges, and if you want to change the group of files, specify the group name with a colon (:) as shown
sudo chown :LU Music.mp3 //For example, I will be changing the group of a file named Music.mp3 to LU.
sudo chown NewOwner:NewGroup File //To change the file owner and file group, you have to append the group name using a colon (:) to the new user.
sudo chown milan:LU Music.mp3 //For example, I will be changing the owner to milan and the file group to LU of the Music.mp3 file.
sudo chown -R NewOwner NameOfDirectory  //To change only the file ownership recursively.
sudo chown -R milan Directory   //Let's say I want to change the owner of every file present inside the directory name Directory, so I'd have to follow the given command
sudo chown -R NewOwner:NewGroup DirectoryName  //Similarly, you can change the ownership and group at once by following the given command syntax.